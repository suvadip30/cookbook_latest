//
// CHEF MANAGED FILE: DO NOT EDIT
// Controlling Cookbook: <%=  @cookbook_name %>
//

// Automatically upgrade packages from these (origin, archive) pairs
Unattended-Upgrade::Allowed-Origins {
<% if node['patchman']['environment'] == "prod" && node['patchman']['debian']['prod']['security_only']-%>
        "${distro_id} ${distro_codename}-security";
<% elsif node['patchman']['environment'] == "test" && node['patchman']['debian']['test']['security_only']-%>
        "${distro_id} ${distro_codename}-security";
<% else -%>
        "${distro_id} stable";
        "${distro_id} ${distro_codename}-security";
<% end %>
};

// List of packages to not update
Unattended-Upgrade::Package-Blacklist {
<% if node['patchman']['environment'] == "prod"-%>
<% node['patchman']['prod']['exclude_list'].each do |pkg| %>
  <%= '     "#{pkg}";' %>
  <% end %>
<% elsif -%>
<% node['patchman']['test']['exclude_list'].each do |pkg| %>
  <%= '     "#{pkg}";' %>
  <% end %>
<% end %>
};

// Send email to this address for problems or packages upgrades
// If empty or unset then no email is sent, make sure that you
// have a working mail setup on your system. The package 'mailx'
// must be installed or anything that provides /usr/bin/mail.
<% if node['patchman']['enable']['email'] -%>
Unattended-Upgrade::Mail "<%= node['patchman']['email'] -%>";
<% else -%>
//Unattended-Upgrade::Mail "root@localhost";
<% end -%>

// Do automatic removal of new unused dependencies after the upgrade
// (equivalent to apt-get autoremove)
//Unattended-Upgrade::Remove-Unused-Dependencies "false";

// Automatically reboot *WITHOUT CONFIRMATION* if a
// the file /var/run/reboot-required is found after the upgrade
<% if node['patchman']['environment'] == "prod" && node['patchman']['prod']['auto_reboot']-%>
Unattended-Upgrade::Automatic-Reboot "true";
<% elsif node['patchman']['environment'] == "test" && node['patchman']['test']['auto_reboot']-%>
Unattended-Upgrade::Automatic-Reboot "true";
<% else -%>
Unattended-Upgrade::Automatic-Reboot "false";
<% end %>

// Use apt bandwidth limit feature, this example limits the download
// speed to 70kb/sec
//Acquire::http::Dl-Limit "70";